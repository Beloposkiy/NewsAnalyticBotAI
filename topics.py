from bertopic import BERTopic

# –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –º–æ–¥–µ–ª–∏ (–æ–¥–∏–Ω —Ä–∞–∑ –Ω–∞ –∑–∞–ø—É—Å–∫)
topic_model = BERTopic(language="multilingual", calculate_probabilities=True)


def extract_topics(texts, top_n=5):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç top_n –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ–º
    """
    if not texts:
        return []

    topics, _ = topic_model.fit_transform(texts)
    topic_info = topic_model.get_topic_info()

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º -1 (–º—É—Å–æ—Ä)
    filtered_topics = topic_info[topic_info.Topic != -1].head(top_n)

    result = []
    for _, row in filtered_topics.iterrows():
        result.append(f"üß† <b>{row['Name']}</b>\n–£–ø–æ–º–∏–Ω–∞–Ω–∏–π: {row['Count']}")
    return result
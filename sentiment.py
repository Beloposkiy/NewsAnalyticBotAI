from transformers import AutoTokenizer, AutoModelForSequenceClassification, pipeline

model_path = "models/rubert-sentiment"  # –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—É—Ç—å

tokenizer = AutoTokenizer.from_pretrained(model_path)
model = AutoModelForSequenceClassification.from_pretrained(model_path)
sentiment_pipeline = pipeline("sentiment-analysis", model=model, tokenizer=tokenizer)

def analyze_sentiment(text: str) -> str:
    try:
        result = sentiment_pipeline(text[:512])[0]
        label = result["label"]
        score = result["score"]
        if label == "NEGATIVE":
            return f"üò† –ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è ({score:.2f})"
        elif label == "NEUTRAL":
            return f"üòê –ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è ({score:.2f})"
        elif label == "POSITIVE":
            return f"üòä –ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è ({score:.2f})"
        else:
            return f"ü§∑ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å (label={label})"
    except Exception as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}"
from bertopic import BERTopic

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏
topic_model = BERTopic(language="multilingual", min_topic_size=2, verbose=True)

def extract_topics(texts_with_links: list[dict], top_n=5):
    if not texts_with_links:
        print("‚ùå –ù–µ—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        return []

    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
    texts = [item["title"] for item in texts_with_links]
    print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ {len(texts)} —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")

    # –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    topics, _ = topic_model.fit_transform(texts)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Ç–µ–º–∞—Ö
    topic_info = topic_model.get_topic_info()
    print("üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–º–∞—Ö:")
    print(topic_info)

    # –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤—Å–µ —Ç–µ–º—ã, –≤–∫–ª—é—á–∞—è -1
    filtered = topic_info.head(top_n)
    print("üîé –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–µ–º—ã:")
    print(filtered)

    # –†–µ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
    topic_representatives = topic_model.get_representative_docs()

    results = []
    for _, row in filtered.iterrows():
        topic_id = row["Topic"]
        try:
            example_text = topic_representatives[topic_id][0].strip()
        except (IndexError, KeyError):
            example_text = "(–Ω–µ—Ç –ø—Ä–∏–º–µ—Ä–∞)"
        else:
            example_text = example_text[0].upper() + example_text[1:]

        # –ü–æ–∏—Å–∫ —Å—Å—ã–ª–∫–∏
        link = next(
            (item["url"] for item in texts_with_links
             if item["title"].strip() in example_text or example_text in item["title"].strip()),
            None
        )

        entry = f"‚Ä¢ {example_text}"
        if link:
            entry += f"\n‚û° {link}"
        entry += f"\n‚Äî –£–ø–æ–º–∏–Ω–∞–Ω–∏–π: {row['Count']}"
        results.append(entry)

    print(f"‚úÖ –¢–µ–º—ã, –≥–æ—Ç–æ–≤—ã–µ –∫ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—é: {len(results)}")
    return results


